{"ast":null,"code":"import axiosCall from \"../utils/axios\";\nimport queryString from 'query-string';\n/**\n * @description tthis function calls the request user auth token\n */\n\nexport const requestAuthToken = async () => {\n  const {\n    data\n  } = await axiosCall.get('auth/provider/request/get');\n  return data;\n};\n/**\n * @description validate the callback\n */\n\nexport const validateUtil = async () => {\n  const {\n    oauth_token,\n    oauth_verifier\n  } = queryString.parse(window.location.search); ///validatet teth tokens on the backend\n\n  if (oauth_token && oauth_verifier) {\n    try {\n      //Oauth Step 3\n      await axiosCall({\n        url: `${apiPath}/twitter/oauth/access_token`,\n        method: 'POST',\n        data: {\n          oauth_token,\n          oauth_verifier\n        }\n      });\n    } catch (error) {\n      console.error(error);\n    }\n  }\n};","map":{"version":3,"sources":["/Users/somto/Desktop/personal/studio/src/services/auth.js"],"names":["axiosCall","queryString","requestAuthToken","data","get","validateUtil","oauth_token","oauth_verifier","parse","window","location","search","url","apiPath","method","error","console"],"mappings":"AAAA,OAAOA,SAAP,MAAsB,gBAAtB;AACA,OAAOC,WAAP,MAAwB,cAAxB;AAGA;AACA;AACA;;AACA,OAAO,MAAMC,gBAAgB,GAAG,YAAW;AACvC,QAAM;AAACC,IAAAA;AAAD,MAAS,MAAOH,SAAS,CAACI,GAAV,CAAc,2BAAd,CAAtB;AACA,SAAOD,IAAP;AACH,CAHM;AAKP;AACA;AACA;;AACC,OAAO,MAAME,YAAY,GAAG,YAAW;AACpC,QAAM;AAACC,IAAAA,WAAD;AAAcC,IAAAA;AAAd,MAAgCN,WAAW,CAACO,KAAZ,CAAkBC,MAAM,CAACC,QAAP,CAAgBC,MAAlC,CAAtC,CADoC,CAGpC;;AACA,MAAIL,WAAW,IAAIC,cAAnB,EAAmC;AAC/B,QAAI;AACD;AACA,YAAMP,SAAS,CAAC;AACdY,QAAAA,GAAG,EAAG,GAAEC,OAAQ,6BADF;AAEdC,QAAAA,MAAM,EAAE,MAFM;AAGdX,QAAAA,IAAI,EAAE;AAACG,UAAAA,WAAD;AAAcC,UAAAA;AAAd;AAHQ,OAAD,CAAf;AAKF,KAPD,CAOE,OAAOQ,KAAP,EAAc;AACfC,MAAAA,OAAO,CAACD,KAAR,CAAcA,KAAd;AACA;AACD;AAEP,CAjBO","sourcesContent":["import axiosCall from \"../utils/axios\"\nimport queryString from 'query-string';\n\n\n/**\n * @description tthis function calls the request user auth token\n */\nexport const requestAuthToken = async () =>{\n    const {data} = await  axiosCall.get('auth/provider/request/get')\n    return data\n}\n\n/**\n * @description validate the callback\n */\n export const validateUtil = async () =>{\n    const {oauth_token, oauth_verifier} = queryString.parse(window.location.search);  \n\n    ///validatet teth tokens on the backend\n    if (oauth_token && oauth_verifier) {\n        try {\n           //Oauth Step 3\n           await axiosCall({\n             url: `${apiPath}/twitter/oauth/access_token`,  \n             method: 'POST',\n             data: {oauth_token, oauth_verifier}\n           });\n        } catch (error) {\n         console.error(error); \n        }\n       }\n\n}"]},"metadata":{},"sourceType":"module"}