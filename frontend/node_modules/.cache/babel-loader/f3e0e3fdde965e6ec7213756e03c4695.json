{"ast":null,"code":"import axiosCall from \"../utils/axios\";\nimport queryString from 'query-string';\nimport { login } from \"../utils/auth\";\n/**\n * @description tthis function calls the request user auth token\n */\n\nexport const requestAuthToken = async () => {\n  const {\n    data\n  } = await axiosCall.get('auth/provider/request/get');\n  return data;\n};\n/**\n * @description validate the callback\n */\n\nexport const validateUtil = async () => {\n  const {\n    oauth_token,\n    oauth_verifier\n  } = queryString.parse(window.location.search); ///validate tth tokens on the backend\n\n  if (oauth_token && oauth_verifier) {\n    try {\n      //Oauth Step 3\n      const {\n        data\n      } = await axiosCall.post('auth/provider/setupuser', {\n        oauth_token,\n        oauth_verifier\n      });\n\n      if (data.status !== 'success') {\n        throw new Error('Cant log in');\n      }\n\n      console.log(data);\n      login(data.data.tokens);\n    } catch (error) {\n      console.error(error); //////error if i cant login show a toast and go back too login page\n\n      window.location.href = \"/login\";\n    }\n  }\n};\n/**\n * @description Load user details\n */\n\nexport const loadUser = async () => {\n  try {\n    //Oauth Step 3\n    const {\n      data\n    } = await axiosCall.get('auth/provider/loaduser');\n\n    if (data.status !== 'success') {\n      throw new Error('Cant log in');\n    }\n\n    console.log(data);\n    return data.data;\n  } catch (error) {\n    console.error(error); //////error if i cant login show a toast and go back too login page\n  }\n};","map":{"version":3,"sources":["/Users/somto/Desktop/personal/studio/src/services/auth.js"],"names":["axiosCall","queryString","login","requestAuthToken","data","get","validateUtil","oauth_token","oauth_verifier","parse","window","location","search","post","status","Error","console","log","tokens","error","href","loadUser"],"mappings":"AAAA,OAAOA,SAAP,MAAsB,gBAAtB;AACA,OAAOC,WAAP,MAAwB,cAAxB;AACA,SAASC,KAAT,QAAsB,eAAtB;AAGA;AACA;AACA;;AACA,OAAO,MAAMC,gBAAgB,GAAG,YAAY;AACxC,QAAM;AAAEC,IAAAA;AAAF,MAAW,MAAMJ,SAAS,CAACK,GAAV,CAAc,2BAAd,CAAvB;AACA,SAAOD,IAAP;AACH,CAHM;AAKP;AACA;AACA;;AACA,OAAO,MAAME,YAAY,GAAG,YAAY;AACpC,QAAM;AAAEC,IAAAA,WAAF;AAAeC,IAAAA;AAAf,MAAkCP,WAAW,CAACQ,KAAZ,CAAkBC,MAAM,CAACC,QAAP,CAAgBC,MAAlC,CAAxC,CADoC,CAGpC;;AACA,MAAIL,WAAW,IAAIC,cAAnB,EAAmC;AAC/B,QAAI;AACA;AACA,YAAM;AAAEJ,QAAAA;AAAF,UAAW,MAAMJ,SAAS,CAACa,IAAV,CAAe,yBAAf,EAA0C;AAAEN,QAAAA,WAAF;AAAeC,QAAAA;AAAf,OAA1C,CAAvB;;AACA,UAAIJ,IAAI,CAACU,MAAL,KAAgB,SAApB,EAA+B;AAC3B,cAAM,IAAIC,KAAJ,CAAU,aAAV,CAAN;AACH;;AACDC,MAAAA,OAAO,CAACC,GAAR,CAAYb,IAAZ;AACAF,MAAAA,KAAK,CAACE,IAAI,CAACA,IAAL,CAAUc,MAAX,CAAL;AACH,KARD,CAQE,OAAOC,KAAP,EAAc;AACZH,MAAAA,OAAO,CAACG,KAAR,CAAcA,KAAd,EADY,CAEZ;;AACAT,MAAAA,MAAM,CAACC,QAAP,CAAgBS,IAAhB,GAAuB,QAAvB;AACH;AACJ;AAEJ,CApBM;AAwBP;AACA;AACA;;AACA,OAAO,MAAMC,QAAQ,GAAG,YAAY;AAEhC,MAAI;AACA;AACA,UAAM;AAAEjB,MAAAA;AAAF,QAAW,MAAMJ,SAAS,CAACK,GAAV,CAAc,wBAAd,CAAvB;;AACA,QAAID,IAAI,CAACU,MAAL,KAAgB,SAApB,EAA+B;AAC3B,YAAM,IAAIC,KAAJ,CAAU,aAAV,CAAN;AACH;;AACDC,IAAAA,OAAO,CAACC,GAAR,CAAYb,IAAZ;AACA,WAAOA,IAAI,CAACA,IAAZ;AACF,GARF,CAQG,OAAOe,KAAP,EAAc;AACbH,IAAAA,OAAO,CAACG,KAAR,CAAcA,KAAd,EADa,CAEb;AACF;AAGL,CAhBM","sourcesContent":["import axiosCall from \"../utils/axios\"\nimport queryString from 'query-string';\nimport { login } from \"../utils/auth\";\n\n\n/**\n * @description tthis function calls the request user auth token\n */\nexport const requestAuthToken = async () => {\n    const { data } = await axiosCall.get('auth/provider/request/get')\n    return data\n}\n\n/**\n * @description validate the callback\n */\nexport const validateUtil = async () => {\n    const { oauth_token, oauth_verifier } = queryString.parse(window.location.search);\n\n    ///validate tth tokens on the backend\n    if (oauth_token && oauth_verifier) {\n        try {\n            //Oauth Step 3\n            const { data } = await axiosCall.post('auth/provider/setupuser', { oauth_token, oauth_verifier });\n            if (data.status !== 'success') {\n                throw new Error('Cant log in')\n            }\n            console.log(data)\n            login(data.data.tokens)\n        } catch (error) {\n            console.error(error);\n            //////error if i cant login show a toast and go back too login page\n            window.location.href = \"/login\"\n        }\n    }\n\n}\n\n\n\n/**\n * @description Load user details\n */\nexport const loadUser = async () => {\n\n    try {\n        //Oauth Step 3\n        const { data } = await axiosCall.get('auth/provider/loaduser');\n        if (data.status !== 'success') {\n            throw new Error('Cant log in')\n        }\n        console.log(data)\n        return data.data\n     } catch (error) {\n        console.error(error);\n        //////error if i cant login show a toast and go back too login page\n     }\n\n\n}"]},"metadata":{},"sourceType":"module"}