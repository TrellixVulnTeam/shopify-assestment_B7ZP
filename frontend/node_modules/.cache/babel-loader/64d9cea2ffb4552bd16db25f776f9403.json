{"ast":null,"code":"import axiosCall from \"../utils/axios\";\nimport queryString from 'query-string';\nimport { login } from \"../utils/auth\";\n/**\n * @description tthis function calls the request user auth token\n */\n\nexport const requestAuthToken = async () => {\n  const {\n    data\n  } = await axiosCall.get('auth/provider/request/get');\n  return data;\n};\n/**\n * @description validate the callback\n */\n\nexport const validateUtil = async () => {\n  const {\n    oauth_token,\n    oauth_verifier\n  } = queryString.parse(window.location.search); ///validatet teth tokens on the backend\n\n  if (oauth_token && oauth_verifier) {\n    try {\n      //Oauth Step 3\n      const {\n        data\n      } = await axiosCall.post('auth/provider/setupuser', {\n        oauth_token,\n        oauth_verifier\n      });\n      console.log(data);\n      login(data);\n    } catch (error) {\n      console.error(error);\n    }\n  }\n};","map":{"version":3,"sources":["/Users/somto/Desktop/personal/studio/src/services/auth.js"],"names":["axiosCall","queryString","login","requestAuthToken","data","get","validateUtil","oauth_token","oauth_verifier","parse","window","location","search","post","console","log","error"],"mappings":"AAAA,OAAOA,SAAP,MAAsB,gBAAtB;AACA,OAAOC,WAAP,MAAwB,cAAxB;AACA,SAASC,KAAT,QAAsB,eAAtB;AAGA;AACA;AACA;;AACA,OAAO,MAAMC,gBAAgB,GAAG,YAAW;AACvC,QAAM;AAACC,IAAAA;AAAD,MAAS,MAAOJ,SAAS,CAACK,GAAV,CAAc,2BAAd,CAAtB;AACA,SAAOD,IAAP;AACH,CAHM;AAKP;AACA;AACA;;AACC,OAAO,MAAME,YAAY,GAAG,YAAW;AACpC,QAAM;AAACC,IAAAA,WAAD;AAAcC,IAAAA;AAAd,MAAgCP,WAAW,CAACQ,KAAZ,CAAkBC,MAAM,CAACC,QAAP,CAAgBC,MAAlC,CAAtC,CADoC,CAGpC;;AACA,MAAIL,WAAW,IAAIC,cAAnB,EAAmC;AAC/B,QAAI;AACJ;AACA,YAAM;AAACJ,QAAAA;AAAD,UAAS,MAAMJ,SAAS,CAACa,IAAV,CAAgB,yBAAhB,EAA2C;AAACN,QAAAA,WAAD;AAAcC,QAAAA;AAAd,OAA3C,CAArB;AACIM,MAAAA,OAAO,CAACC,GAAR,CAAYX,IAAZ;AACJF,MAAAA,KAAK,CAACE,IAAD,CAAL;AACC,KALD,CAKE,OAAOY,KAAP,EAAc;AACfF,MAAAA,OAAO,CAACE,KAAR,CAAcA,KAAd;AACA;AACJ;AAEJ,CAfO","sourcesContent":["import axiosCall from \"../utils/axios\"\nimport queryString from 'query-string';\nimport { login } from \"../utils/auth\";\n\n\n/**\n * @description tthis function calls the request user auth token\n */\nexport const requestAuthToken = async () =>{\n    const {data} = await  axiosCall.get('auth/provider/request/get')\n    return data\n}\n\n/**\n * @description validate the callback\n */\n export const validateUtil = async () =>{\n    const {oauth_token, oauth_verifier} = queryString.parse(window.location.search);  \n\n    ///validatet teth tokens on the backend\n    if (oauth_token && oauth_verifier) {\n        try {\n        //Oauth Step 3\n        const {data} = await axiosCall.post( 'auth/provider/setupuser', {oauth_token, oauth_verifier});\n            console.log(data)\n        login(data)\n        } catch (error) {\n         console.error(error); \n        }\n    }\n\n}"]},"metadata":{},"sourceType":"module"}