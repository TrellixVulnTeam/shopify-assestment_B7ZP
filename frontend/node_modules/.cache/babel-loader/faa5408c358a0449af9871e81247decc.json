{"ast":null,"code":"var _jsxFileName = \"/Users/somto/Desktop/personal/shop/src/components/dashboard/table.components.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { useTable, useSortBy } from \"react-table\";\nimport { SortIcon, SortUpIcon, SortDownIcon } from '../../utils/shared/Iconss';\nimport ScrollComponent from \"./scrroll.component\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { createElement as _createElement } from \"react\";\nconst Styles = styled.div`\n  padding: 1rem;\n\n  table {\n    border-spacing: 0;\n    border: 1px solid black;\n\n    tr {\n      :last-child {\n        td {\n          border-bottom: 0;\n        }\n      }\n    }\n\n    th,\n    td {\n      margin: 0;\n      padding: 0.5rem;\n      border-bottom: 1px solid black;\n      border-right: 1px solid black;\n\n      :last-child {\n        border-right: 0;\n      }\n    }\n  }\n\n  .no-padding{\n    padding:0 !important\n  }\n`;\n\nfunction TableV2(_ref) {\n  _s();\n\n  let {\n    columns,\n    data,\n    update,\n    setLogs,\n    search,\n    setSearch\n  } = _ref;\n  // Use the state and functions returned from useTable to build your UI\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow,\n    state: {\n      sortBy\n    }\n  } = useTable({\n    columns,\n    data\n  }, useSortBy); // Render the UI for your table\n\n  return /*#__PURE__*/_jsxDEV(ScrollComponent, {\n    loadData: update,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-4 flex flex-col\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"\",\n        style: {\n          overflow: 'scroll'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"py-2 align-middle inline-block min-w-full sm:px-6 lg:px-8 no-padding\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"shadow overflow-hidden border-b border-gray-200 sm:rounded-lg\",\n            children: /*#__PURE__*/_jsxDEV(\"table\", { ...getTableProps(),\n              className: \"min-w-full divide-y divide-gray-200\",\n              children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                className: \"bg-gray-50\",\n                children: headerGroups.map(headerGroup => /*#__PURE__*/_jsxDEV(\"tr\", { ...headerGroup.getHeaderGroupProps(),\n                  children: headerGroup.headers.map(column =>\n                  /*#__PURE__*/\n                  // Add the sorting props to control sorting. For this example\n                  // we can add them into the header props\n                  _jsxDEV(\"th\", {\n                    scope: \"col\",\n                    className: \"group px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\",\n                    ...column.getHeaderProps(column.getSortByToggleProps()),\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"flex items-center justify-between\",\n                      children: [column.render('Header'), column.id !== 'summary' && column.id !== 'logType' && column.id !== 'createdAt' && column.id !== 'trace' && column.id !== 'platform' && column.id !== 'apiName' && column.id !== 'duration' && /*#__PURE__*/_jsxDEV(\"input\", {\n                        style: {\n                          border: '1px solid lightblue',\n                          borderRadius: '10px',\n                          marginLeft: '30px'\n                        },\n                        onClick: e => {\n                          e.stopPropagation();\n                        },\n                        onChange: e => {\n                          if (e.target.value.length > 2) {\n                            //search\n                            const newsearch = JSON.parse(JSON.stringify(search));\n                            newsearch[`${column.id}`] = e.target.value;\n                            setSearch(newsearch);\n                          }\n\n                          if (e.target.value.length === 0) {\n                            const newsearch = JSON.parse(JSON.stringify(search));\n                            newsearch[`${column.id}`] = e.target.value;\n                            setSearch(newsearch);\n                          }\n                        },\n                        type: 'text'\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 92,\n                        columnNumber: 256\n                      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                        children: column.isSorted ? column.isSortedDesc ? /*#__PURE__*/_jsxDEV(SortDownIcon, {\n                          className: \"w-4 h-4 text-gray-400\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 115,\n                          columnNumber: 71\n                        }, this) : /*#__PURE__*/_jsxDEV(SortUpIcon, {\n                          className: \"w-4 h-4 text-gray-400\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 116,\n                          columnNumber: 71\n                        }, this) : /*#__PURE__*/_jsxDEV(SortIcon, {\n                          className: \"w-4 h-4 text-gray-400 opacity-0 group-hover:opacity-100\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 118,\n                          columnNumber: 69\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 112,\n                        columnNumber: 57\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 89,\n                      columnNumber: 53\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 84,\n                    columnNumber: 49\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 80,\n                  columnNumber: 41\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"tbody\", { ...getTableBodyProps(),\n                className: \"bg-white divide-y divide-gray-200\",\n                children: rows.map((row, i) => {\n                  // new\n                  prepareRow(row);\n                  return /*#__PURE__*/_createElement(\"tr\", { ...row.getRowProps(),\n                    key: `${i}`,\n                    __self: this,\n                    __source: {\n                      fileName: _jsxFileName,\n                      lineNumber: 136,\n                      columnNumber: 45\n                    }\n                  }, row.cells.map(cell => {\n                    return /*#__PURE__*/_jsxDEV(\"td\", { ...cell.getCellProps(),\n                      className: \"px-6 py-4 whitespace-nowrap\",\n                      role: \"cell\",\n                      children: cell.column.Cell.name === \"defaultRenderer\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"text-sm text-gray-500\",\n                        children: cell.render('Cell')\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 145,\n                        columnNumber: 67\n                      }, this) : cell.render('Cell')\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 139,\n                      columnNumber: 57\n                    }, this);\n                  }));\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 129,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 9\n  }, this);\n}\n\n_s(TableV2, \"Bq7ZFJTrUj+Ki4VvgQ+s9bTV94I=\", false, function () {\n  return [useTable];\n});\n\n_c = TableV2;\nexport default TableV2;\n\nvar _c;\n\n$RefreshReg$(_c, \"TableV2\");","map":{"version":3,"names":["React","useState","styled","useTable","useSortBy","SortIcon","SortUpIcon","SortDownIcon","ScrollComponent","Styles","div","TableV2","columns","data","update","setLogs","search","setSearch","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","state","sortBy","overflow","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","getSortByToggleProps","render","id","border","borderRadius","marginLeft","e","stopPropagation","target","value","length","newsearch","JSON","parse","stringify","isSorted","isSortedDesc","row","i","getRowProps","cells","cell","getCellProps","Cell","name"],"sources":["/Users/somto/Desktop/personal/shop/src/components/dashboard/table.components.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { useTable, useSortBy } from \"react-table\";\nimport { SortIcon, SortUpIcon, SortDownIcon } from '../../utils/shared/Iconss'\n\nimport ScrollComponent from \"./scrroll.component\";\n\n\nconst Styles = styled.div`\n  padding: 1rem;\n\n  table {\n    border-spacing: 0;\n    border: 1px solid black;\n\n    tr {\n      :last-child {\n        td {\n          border-bottom: 0;\n        }\n      }\n    }\n\n    th,\n    td {\n      margin: 0;\n      padding: 0.5rem;\n      border-bottom: 1px solid black;\n      border-right: 1px solid black;\n\n      :last-child {\n        border-right: 0;\n      }\n    }\n  }\n\n  .no-padding{\n    padding:0 !important\n  }\n`;\n\n\n\nfunction TableV2({ columns, data, update, setLogs ,search,setSearch }) {\n    // Use the state and functions returned from useTable to build your UI\n\n    const {\n        getTableProps,\n        getTableBodyProps,\n        headerGroups,\n        rows,\n        prepareRow,\n        state: { sortBy }\n    } = useTable(\n        {\n            columns,\n            data\n        },\n        useSortBy\n    );\n\n \n\n\n \n\n    // Render the UI for your table\n    return (\n        \n        <ScrollComponent  loadData= {update} > \n            <div className=\"mt-4 flex flex-col\">\n                <div className=\"\" style={{\n                    overflow:'scroll'\n                }}>\n                    <div className=\"py-2 align-middle inline-block min-w-full sm:px-6 lg:px-8 no-padding\">\n                        <div className=\"shadow overflow-hidden border-b border-gray-200 sm:rounded-lg\">\n                            <table {...getTableProps()} className=\"min-w-full divide-y divide-gray-200\">\n                                <thead className=\"bg-gray-50\">\n                                    {headerGroups.map(headerGroup => (\n                                        <tr {...headerGroup.getHeaderGroupProps()}>\n                                            {headerGroup.headers.map(column => (\n                                                // Add the sorting props to control sorting. For this example\n                                                // we can add them into the header props\n                                                <th\n                                                    scope=\"col\"\n                                                    className=\"group px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\"\n                                                    {...column.getHeaderProps(column.getSortByToggleProps())}\n                                                >\n                                                    <div className=\"flex items-center justify-between\">\n                                                        {column.render('Header')}\n                                                        {/* Add a sort direction indicator */}\n                                                        {(   column.id !== 'summary' && column.id !== 'logType' && column.id !== 'createdAt' && column.id !== 'trace' && column.id !== 'platform' && column.id !== 'apiName' && column.id !== 'duration'  ) && <input style={{\n                                                            border: '1px solid lightblue',\n                                                            borderRadius: '10px',\n                                                            marginLeft: '30px'\n                                                        }} onClick={e => {\n                                                            e.stopPropagation()\n                                                        }} onChange={e => {\n                                                            if (e.target.value.length > 2) {\n                                                                //search\n                                                                const newsearch = JSON.parse(JSON.stringify(search))\n                                                                newsearch[`${column.id}`] = e.target.value\n                                                                setSearch(newsearch)\n                                                            }\n\n                                                            if (e.target.value.length === 0) {\n                                                                const newsearch = JSON.parse(JSON.stringify(search))\n                                                                newsearch[`${column.id}`] = e.target.value\n                                                                setSearch(newsearch)\n                                                            }\n                                                        }} type={'text'} ></input>}\n                                                        <span>\n                                                            {column.isSorted\n                                                                ? column.isSortedDesc\n                                                                    ? <SortDownIcon className=\"w-4 h-4 text-gray-400\" />\n                                                                    : <SortUpIcon className=\"w-4 h-4 text-gray-400\" />\n                                                                : (\n                                                                    <SortIcon className=\"w-4 h-4 text-gray-400 opacity-0 group-hover:opacity-100\" />\n                                                                )}\n                                                        </span>\n                                                    </div>\n                                                </th>\n                                            ))}\n                                        </tr>\n                                    ))}\n                                </thead>\n                               \n\n                                <tbody\n                                    {...getTableBodyProps()}\n                                    className=\"bg-white divide-y divide-gray-200\"\n                                >\n                                    {rows.map((row,i) => {  // new\n                                        prepareRow(row)\n                                        return (\n                                            <tr   {...row.getRowProps()}  key={`${i}`}>\n                                                {row.cells.map(cell => {\n                                                    return (\n                                                        <td\n                                                            {...cell.getCellProps()}\n                                                            className=\"px-6 py-4 whitespace-nowrap\"\n                                                            role=\"cell\"\n                                                        >\n                                                            {cell.column.Cell.name === \"defaultRenderer\"\n                                                                ? <div className=\"text-sm text-gray-500\">{cell.render('Cell')}</div>\n                                                                : cell.render('Cell')\n                                                            }\n                                                        </td>\n                                                    )\n                                                })}\n                                            </tr>\n                                        )\n                                    })}\n                                </tbody>\n                             \n                            </table>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            </ScrollComponent>\n\n     );\n}\nexport default TableV2;"],"mappings":"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"},"metadata":{},"sourceType":"module"}