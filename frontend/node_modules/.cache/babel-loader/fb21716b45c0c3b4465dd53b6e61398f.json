{"ast":null,"code":"import moment from \"moment\";\nimport axiosCall from \"../utils/axios\";\n/**\n * @description creates an inventory \n */\n\nexport const createAnInventory = async (itemName, location) => {\n  try {\n    const {\n      data\n    } = await axiosCall.post('/inventory', {\n      itemName,\n      location\n    });\n\n    if (data.status !== 'success') {\n      alert('Unable to create inventory');\n      return;\n    }\n\n    alert('Inventory created');\n    return data.inventory;\n  } catch (error) {\n    alert('Unable to create inventory');\n  }\n};\nexport const loadInventory = async setInventory => {\n  try {\n    const {\n      data\n    } = await axiosCall.get('/inventory');\n\n    if (data.status !== 'success') {\n      alert('Unable to load inventory');\n      return;\n    }\n\n    const newData = data.allInventory.map(data => {\n      return { ...data,\n        createdAt: moment(data.createdAt).format('llll'),\n        updatedAt: moment(data.updatedAt).format('llll')\n      };\n    });\n    setInventory(newData);\n  } catch (error) {\n    console.log(error);\n    alert('Unable to Load inventory');\n  }\n};","map":{"version":3,"names":["moment","axiosCall","createAnInventory","itemName","location","data","post","status","alert","inventory","error","loadInventory","setInventory","get","newData","allInventory","map","createdAt","format","updatedAt","console","log"],"sources":["/Users/somto/Desktop/personal/shop/src/services/inventory.js"],"sourcesContent":["import moment from \"moment\"\nimport axiosCall from \"../utils/axios\"\n\n/**\n * @description creates an inventory \n */\nexport const createAnInventory = async (itemName, location) =>{\n    try {\n        const {data} = await  axiosCall.post('/inventory', {\n            itemName, location\n        })\n   \n        if (data.status!=='success') {\n           alert('Unable to create inventory')\n           return\n        }\n   \n        alert('Inventory created')\n        return data.inventory\n       \n      } catch (error) {\n       alert('Unable to create inventory')\n      }\n}\n\n\nexport const loadInventory = async (setInventory) =>{\n    try {\n        const {data} = await  axiosCall.get('/inventory' )\n        if (data.status!=='success') {\n            alert('Unable to load inventory')\n            return\n         }\n\n          const newData =  data.allInventory.map((data)=>{\n            return {\n                ...data,\n                createdAt:moment(data.createdAt).format('llll') ,\n                updatedAt:moment(data.updatedAt).format('llll') ,\n            }\n         })\n        setInventory(newData)\n    } catch (error) {\n        console.log(error)\n        alert('Unable to Load inventory')\n    }\n}"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,QAAnB;AACA,OAAOC,SAAP,MAAsB,gBAAtB;AAEA;AACA;AACA;;AACA,OAAO,MAAMC,iBAAiB,GAAG,OAAOC,QAAP,EAAiBC,QAAjB,KAA6B;EAC1D,IAAI;IACA,MAAM;MAACC;IAAD,IAAS,MAAOJ,SAAS,CAACK,IAAV,CAAe,YAAf,EAA6B;MAC/CH,QAD+C;MACrCC;IADqC,CAA7B,CAAtB;;IAIA,IAAIC,IAAI,CAACE,MAAL,KAAc,SAAlB,EAA6B;MAC1BC,KAAK,CAAC,4BAAD,CAAL;MACA;IACF;;IAEDA,KAAK,CAAC,mBAAD,CAAL;IACA,OAAOH,IAAI,CAACI,SAAZ;EAED,CAbH,CAaI,OAAOC,KAAP,EAAc;IACfF,KAAK,CAAC,4BAAD,CAAL;EACA;AACN,CAjBM;AAoBP,OAAO,MAAMG,aAAa,GAAG,MAAOC,YAAP,IAAuB;EAChD,IAAI;IACA,MAAM;MAACP;IAAD,IAAS,MAAOJ,SAAS,CAACY,GAAV,CAAc,YAAd,CAAtB;;IACA,IAAIR,IAAI,CAACE,MAAL,KAAc,SAAlB,EAA6B;MACzBC,KAAK,CAAC,0BAAD,CAAL;MACA;IACF;;IAEA,MAAMM,OAAO,GAAIT,IAAI,CAACU,YAAL,CAAkBC,GAAlB,CAAuBX,IAAD,IAAQ;MAC7C,OAAO,EACH,GAAGA,IADA;QAEHY,SAAS,EAACjB,MAAM,CAACK,IAAI,CAACY,SAAN,CAAN,CAAuBC,MAAvB,CAA8B,MAA9B,CAFP;QAGHC,SAAS,EAACnB,MAAM,CAACK,IAAI,CAACc,SAAN,CAAN,CAAuBD,MAAvB,CAA8B,MAA9B;MAHP,CAAP;IAKF,CANiB,CAAjB;IAOFN,YAAY,CAACE,OAAD,CAAZ;EACH,CAfD,CAeE,OAAOJ,KAAP,EAAc;IACZU,OAAO,CAACC,GAAR,CAAYX,KAAZ;IACAF,KAAK,CAAC,0BAAD,CAAL;EACH;AACJ,CApBM"},"metadata":{},"sourceType":"module"}