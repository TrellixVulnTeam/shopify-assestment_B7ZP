{"ast":null,"code":"/**\n * Set of fucntions to handle axios calls\n */\nimport axios from \"axios\";\nimport { toast } from \"react-toastify\";\n\nfunction manageErrorConnection(err) {\n  if (err.response && err.response.status >= 400 && err.response.status <= 500) {\n    try {\n      if (err.response) {\n        if (err.response.status === 401) {\n          localStorage.clear();\n          window.location = '/login';\n        }\n\n        const {\n          data\n        } = err.response;\n        const error = data.errors ? `${data.errors[0].message} ${data.errors[0].cause ? data.errors[0].cause : ''}` : data.payload.message;\n        console.log('::::::::::', error);\n        toast(error);\n        return Promise.reject(new Error(error));\n      }\n    } catch (error) {\n      console.log(error);\n    } // this will trigger the `handleError` function in the promise chain\n\n  } else if (err.code === 'ECONNREFUSED') {\n    // this will trigger the `handlerResponse` function in the promise chain\n    // bacause we are not returning a rejection! Just an example\n    return 'nevermind';\n  } else {\n    // this will trigger the `handleError` function in the promise chain\n    return Promise.reject(err);\n  }\n}\n\nfunction handleResponse(response) {\n  console.log(`handleResponse: ${response}`);\n}\n\nfunction handleError(error) {\n  console.log(`handleError: ${error}`);\n}\n\nclass AxiosCalls {\n  constructor() {\n    this.client = axios.create({\n      baseURL: `${process.env.REACT_APP_API}`\n    }); // Add a request interceptor\n\n    this.client.interceptors.request.use(function (config) {\n      // Do something before request is sent\n      const token = localStorage.getItem('accessToken'); // const refresh = localStorage.getItem('refreshToken')\n\n      config.headers.Authorization = `Bearer ${token}`; // config.headers[\"X-Refresh-Token\"] = `refresh ${refresh}`;\n\n      return config;\n    }, manageErrorConnection);\n  }\n  /**\n   * @description Axios get request\n   * @param {*} url url for request\n   * @returns  axios promisr\n   */\n\n\n  get(url) {\n    return this.client.get(url);\n  }\n  /**\n   * @description axios post request\n   * @param {*} url  for requst\n   * @param {*} data to post\n   * @returns \n   */\n\n\n  post(url, data) {\n    return this.client.post(url, data);\n  }\n  /**\n   * @description deltet axios requestt\n   * @param {*} url url for request\n   * @returns \n   */\n\n\n  delete(url) {\n    return this.client.delete(url);\n  }\n  /**\n   * \n   * @param {*} url url for request\n   * @param {*} data data to pass\n   * @returns \n   */\n\n\n  update(url) {\n    let data = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    return this.client.put(url, data);\n  }\n  /**\n   * @description this function extract the error response message from the data\n   * @param {ErrorObject} error \n   */\n\n\n  extractErrorMessage(error) {\n    console.log({\n      error: error\n    });\n    const {\n      data\n    } = error.response;\n    return `${data.errors[0].message} ${data.errors[0].cause ? data.errors[0].cause : ''}`;\n  }\n\n}\n\nconst axiosCall = new AxiosCalls();\nexport default axiosCall;","map":{"version":3,"names":["axios","toast","manageErrorConnection","err","response","status","localStorage","clear","window","location","data","error","errors","message","cause","payload","console","log","Promise","reject","Error","code","handleResponse","handleError","AxiosCalls","constructor","client","create","baseURL","process","env","REACT_APP_API","interceptors","request","use","config","token","getItem","headers","Authorization","get","url","post","delete","update","put","extractErrorMessage","axiosCall"],"sources":["/Users/somto/Desktop/personal/shop/src/utils/axios.js"],"sourcesContent":["/**\n * Set of fucntions to handle axios calls\n */\n\nimport axios from \"axios\";\nimport { toast } from \"react-toastify\";\n\n\nfunction manageErrorConnection(err) {\n    if (err.response && err.response.status >= 400 && err.response.status <= 500) {\n       try {\n        if (   err.response){\n           \n            if (err.response.status === 401)  {\n                    localStorage.clear()\n                    window.location = '/login'\n             }\n    \n            const { data } = err.response;\n            const error = data.errors ? `${data.errors[0].message} ${data.errors[0].cause ? data.errors[0].cause : ''}` : data.payload.message\n            console.log('::::::::::',error)\n            toast(error)\n            return Promise.reject(new Error(error))\n    \n       \n         \n        }\n    } catch (error) {\n        console.log(error)\n    }\n        // this will trigger the `handleError` function in the promise chain\n      } else if (err.code === 'ECONNREFUSED') {\n        // this will trigger the `handlerResponse` function in the promise chain\n        // bacause we are not returning a rejection! Just an example\n        return 'nevermind'\n    } else {\n        // this will trigger the `handleError` function in the promise chain\n        return Promise.reject(err)\n    }\n}\n\nfunction handleResponse(response) {\n    console.log(`handleResponse: ${response}`);\n}\n\nfunction handleError(error) {\n    console.log(`handleError: ${error}`);\n}\n\nclass AxiosCalls {\n    constructor() {\n        this.client = axios.create({\n            baseURL: `${process.env.REACT_APP_API}`\n        });\n\n        // Add a request interceptor\n        this.client.interceptors.request.use(function (config) {\n            // Do something before request is sent\n            const token = localStorage.getItem('accessToken')\n            // const refresh = localStorage.getItem('refreshToken')\n            config.headers.Authorization = `Bearer ${token}`;\n            // config.headers[\"X-Refresh-Token\"] = `refresh ${refresh}`;\n            return config;\n        },manageErrorConnection);\n\n    }\n\n    /**\n     * @description Axios get request\n     * @param {*} url url for request\n     * @returns  axios promisr\n     */\n    get(url) {\n        return this.client.get(url)\n    }\n\n    /**\n     * @description axios post request\n     * @param {*} url  for requst\n     * @param {*} data to post\n     * @returns \n     */\n    post(url, data) {\n        return this.client.post(url, data)\n    }\n\n    /**\n     * @description deltet axios requestt\n     * @param {*} url url for request\n     * @returns \n     */\n    delete(url) {\n        return this.client.delete(url)\n    }\n\n    /**\n     * \n     * @param {*} url url for request\n     * @param {*} data data to pass\n     * @returns \n     */\n    update(url, data = {}) {\n        return this.client.put(url, data)\n    }\n\n\n    /**\n     * @description this function extract the error response message from the data\n     * @param {ErrorObject} error \n     */\n    extractErrorMessage(error) {\n        console.log({ error: error })\n\n        const { data } = error.response;\n        return `${data.errors[0].message} ${data.errors[0].cause ? data.errors[0].cause : ''}`\n    }\n\n\n}\n\n\nconst axiosCall = new AxiosCalls()\n\n\nexport default axiosCall"],"mappings":"AAAA;AACA;AACA;AAEA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,gBAAtB;;AAGA,SAASC,qBAAT,CAA+BC,GAA/B,EAAoC;EAChC,IAAIA,GAAG,CAACC,QAAJ,IAAgBD,GAAG,CAACC,QAAJ,CAAaC,MAAb,IAAuB,GAAvC,IAA8CF,GAAG,CAACC,QAAJ,CAAaC,MAAb,IAAuB,GAAzE,EAA8E;IAC3E,IAAI;MACH,IAAOF,GAAG,CAACC,QAAX,EAAoB;QAEhB,IAAID,GAAG,CAACC,QAAJ,CAAaC,MAAb,KAAwB,GAA5B,EAAkC;UAC1BC,YAAY,CAACC,KAAb;UACAC,MAAM,CAACC,QAAP,GAAkB,QAAlB;QACN;;QAEF,MAAM;UAAEC;QAAF,IAAWP,GAAG,CAACC,QAArB;QACA,MAAMO,KAAK,GAAGD,IAAI,CAACE,MAAL,GAAe,GAAEF,IAAI,CAACE,MAAL,CAAY,CAAZ,EAAeC,OAAQ,IAAGH,IAAI,CAACE,MAAL,CAAY,CAAZ,EAAeE,KAAf,GAAuBJ,IAAI,CAACE,MAAL,CAAY,CAAZ,EAAeE,KAAtC,GAA8C,EAAG,EAA5F,GAAgGJ,IAAI,CAACK,OAAL,CAAaF,OAA3H;QACAG,OAAO,CAACC,GAAR,CAAY,YAAZ,EAAyBN,KAAzB;QACAV,KAAK,CAACU,KAAD,CAAL;QACA,OAAOO,OAAO,CAACC,MAAR,CAAe,IAAIC,KAAJ,CAAUT,KAAV,CAAf,CAAP;MAIH;IACJ,CAjBE,CAiBD,OAAOA,KAAP,EAAc;MACZK,OAAO,CAACC,GAAR,CAAYN,KAAZ;IACH,CApB6E,CAqB1E;;EACD,CAtBH,MAsBS,IAAIR,GAAG,CAACkB,IAAJ,KAAa,cAAjB,EAAiC;IACtC;IACA;IACA,OAAO,WAAP;EACH,CAJQ,MAIF;IACH;IACA,OAAOH,OAAO,CAACC,MAAR,CAAehB,GAAf,CAAP;EACH;AACJ;;AAED,SAASmB,cAAT,CAAwBlB,QAAxB,EAAkC;EAC9BY,OAAO,CAACC,GAAR,CAAa,mBAAkBb,QAAS,EAAxC;AACH;;AAED,SAASmB,WAAT,CAAqBZ,KAArB,EAA4B;EACxBK,OAAO,CAACC,GAAR,CAAa,gBAAeN,KAAM,EAAlC;AACH;;AAED,MAAMa,UAAN,CAAiB;EACbC,WAAW,GAAG;IACV,KAAKC,MAAL,GAAc1B,KAAK,CAAC2B,MAAN,CAAa;MACvBC,OAAO,EAAG,GAAEC,OAAO,CAACC,GAAR,CAAYC,aAAc;IADf,CAAb,CAAd,CADU,CAKV;;IACA,KAAKL,MAAL,CAAYM,YAAZ,CAAyBC,OAAzB,CAAiCC,GAAjC,CAAqC,UAAUC,MAAV,EAAkB;MACnD;MACA,MAAMC,KAAK,GAAG9B,YAAY,CAAC+B,OAAb,CAAqB,aAArB,CAAd,CAFmD,CAGnD;;MACAF,MAAM,CAACG,OAAP,CAAeC,aAAf,GAAgC,UAASH,KAAM,EAA/C,CAJmD,CAKnD;;MACA,OAAOD,MAAP;IACH,CAPD,EAOEjC,qBAPF;EASH;EAED;AACJ;AACA;AACA;AACA;;;EACIsC,GAAG,CAACC,GAAD,EAAM;IACL,OAAO,KAAKf,MAAL,CAAYc,GAAZ,CAAgBC,GAAhB,CAAP;EACH;EAED;AACJ;AACA;AACA;AACA;AACA;;;EACIC,IAAI,CAACD,GAAD,EAAM/B,IAAN,EAAY;IACZ,OAAO,KAAKgB,MAAL,CAAYgB,IAAZ,CAAiBD,GAAjB,EAAsB/B,IAAtB,CAAP;EACH;EAED;AACJ;AACA;AACA;AACA;;;EACIiC,MAAM,CAACF,GAAD,EAAM;IACR,OAAO,KAAKf,MAAL,CAAYiB,MAAZ,CAAmBF,GAAnB,CAAP;EACH;EAED;AACJ;AACA;AACA;AACA;AACA;;;EACIG,MAAM,CAACH,GAAD,EAAiB;IAAA,IAAX/B,IAAW,uEAAJ,EAAI;IACnB,OAAO,KAAKgB,MAAL,CAAYmB,GAAZ,CAAgBJ,GAAhB,EAAqB/B,IAArB,CAAP;EACH;EAGD;AACJ;AACA;AACA;;;EACIoC,mBAAmB,CAACnC,KAAD,EAAQ;IACvBK,OAAO,CAACC,GAAR,CAAY;MAAEN,KAAK,EAAEA;IAAT,CAAZ;IAEA,MAAM;MAAED;IAAF,IAAWC,KAAK,CAACP,QAAvB;IACA,OAAQ,GAAEM,IAAI,CAACE,MAAL,CAAY,CAAZ,EAAeC,OAAQ,IAAGH,IAAI,CAACE,MAAL,CAAY,CAAZ,EAAeE,KAAf,GAAuBJ,IAAI,CAACE,MAAL,CAAY,CAAZ,EAAeE,KAAtC,GAA8C,EAAG,EAArF;EACH;;AAlEY;;AAwEjB,MAAMiC,SAAS,GAAG,IAAIvB,UAAJ,EAAlB;AAGA,eAAeuB,SAAf"},"metadata":{},"sourceType":"module"}